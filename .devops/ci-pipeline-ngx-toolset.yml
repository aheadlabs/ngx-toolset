trigger:
  batch: true
  branches:
    include:
      - main
      - dev
      - feature/*
      - hotfix/*
      - release/*
pr:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

name: CI-$(date:yyyyMMdd)$(rev:.r)

jobs:
  - job: Main
    displayName: Main job
    variables:
      - group: npm
      - group: sonarcloud
    steps:
      # Set runtime versions
      - task: UsePythonVersion@0
        displayName: 'Set Python version'
        inputs:
          versionSpec: '>=3.10'
          addToPath: true
          architecture: 'x64'
      # Install tools and packages and kick off
      - task: CmdLine@2
        displayName: 'npm tools and packages installation'
        inputs:
          script: |
            npm install --force
            npm install -g @angular/cli
      - task: CmdLine@2
        displayName: 'Install devops-toolset'
        inputs:
          script: "pip install devops-toolset"
      - task: PythonScript@0
        displayName: 'Pipeline kick off'
        inputs:
          scriptSource: 'inline'
          script: |
            import devops_toolset.project_types.angular.ci_pipeline_kickoff as ci_pipeline_kickoff
            ci_pipeline_kickoff.main("azuredevops", "$(Build.SourcesDirectory)/projects/ngx-toolset/package.json", "$(Build.SourceBranch)")
      # Build and tests
      - task: SonarCloudPrepare@1
        displayName: 'Prepare SonarCloud analysis'
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'ahead-labs'
          scannerMode: 'CLI'
          configMode: 'file'
          configFile: '.devops/sonar-project.properties'
          projectVersion: '0.0.1' # TODO Replace by $(DT_PROJECT_VERSION) after kick off execution
          extraProperties:
      - task: CmdLine@2
        displayName: 'Build'
        inputs:
          script: 'npm run build-library'
      - task: CmdLine@2
        displayName: 'Test'
        inputs:
          script: 'npm run test-automated'
      - task: SonarCloudAnalyze@1
        displayName: 'Run SonarCloud analysis'
      - task: SonarCloudPublish@1
        displayName: 'Publish quality gate result to SonarCloud'
        inputs:
          pollingTimeoutSec: '300'
      - task: PythonScript@0
        displayName: 'Get SonarCloud Quality Gate results'
        inputs:
          scriptSource: 'inline'
          script: |
            import devops_toolset.devops_platforms.sonarx as sonarx
            sonarx.get_project_quality_gate_status('$(SONARCLOUD_URL)', 'aheadlabs_Signatus', '$(SONARCLOUD_TOKEN)', '$(DT_CURRENT_BRANCH_SIMPLIFIED)')
          failOnStderr: true
        # TODO Auto tagging
#      # Publish artifacts
      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifact to Azure Pipelines'
        inputs:
          PathtoPublish: "$(Build.SourcesDirectory)/dist/"
          ArtifactName: "AngularArtifact"
          publishLocation: "Container"
